C  ADVENTURE DATA FILE CONVERTER
C  ALL NUMBERS ON A LINE THAT ARE AT THE BEGINNING OF THE LINE OR
C  PRECEDED BY TAB AND TERMINATED BY TAB OR THE END OF THE LINE ARE
C  RIGHT JUSTIFIED IN FIELDS OF WIDTH 8, WITHOUT TABS. ALL OTHER TABS
C  ARE CONVERTED TO 2 SPACES.
      PROGRAM DATCVT
      IMPLICIT INTEGER(A-Z)
      CHARACTER LINE*256,OUTLIN*256,C,TAB
      LOGICAL ISDIG
C  FOR SIMPLICITY, JUST TREAT MINUS AS ANOTHER DIGIT
      ISDIG(C)=(C.GE.'0'.AND.C.LE.'9').OR.C.EQ.'-'
      TAB=CHAR(9)
      OPEN(UNIT=1,FILE='advent.dat',ACCESS='SEQUENTIAL',ERR=1,
     1 STATUS='OLD')
      OPEN(UNIT=2,FILE='advent.dat.new',ACCESS='SEQUENTIAL',
     1 STATUS='NEW',ERR=3)
5     READ(UNIT=1,FMT=2,ERR=6,END=11)LINE
      DO 7 E=256,1,-1
7       IF(LINE(E:E).NE.' ')GOTO 8
      WRITE(UNIT=2,FMT=2,ERR=9)
      GOTO 5
8     P=1
      L=1
      R=1
      IF(LINE(256:256).NE.' ')GOTO 15
C  STATE: HAVING JUST SEEN A TAB OR LINE BEGIN
12    IF(.NOT.ISDIG(LINE(R:R)))GOTO 13
14    R=R+1
C  STATE: HAVING SEEN A TAB, THEN ONE OR MORE DIGITS
      IF(ISDIG(LINE(R:R)))GOTO 14
C  STATE: TAB/LB, DIGITS, NON-DIGIT
      IF(R.LE.E.AND.LINE(R:R).NE.TAB)GOTO 13
C  STATE: TAB/LB, DIGITS, TAB OR LINE END
      IF(LINE(L:L).EQ.TAB)L=L+1
      WRITE(UNIT=OUTLIN(P:P+7),FMT=17)LINE(L:R-1)
      P=P+8
      IF(R.GT.E)GOTO 19
C  EAT TAB AFTER INTEGER
      IF(LINE(R:R).EQ.TAB)R=R+1
      L=R
C  YET STILL ACKNOWLEDGE IT BY STATE
      GOTO 12
C  STATE: NEUTRAL
18    IF(R.GT.E)GOTO 19
      IF(LINE(R:R).EQ.TAB)THEN
        R=R+1
      GOTO 12
      ENDIF
      OUTLIN(P:P)=LINE(R:R)
      P=P+1
      R=R+1
      L=R
      GOTO 18
C  STATE: TAB/LB, NON-DIGIT
C  STATE: TAB/LB, DIGITS, NON-TAB/LE
13    IF(R.NE.1.AND.LINE(L:L).EQ.TAB)THEN
        OUTLIN(P:P+1)='  '
        P=P+2
        L=L+1
      ENDIF
      IF(R.GT.L)THEN
        OUTLIN(P:P+R-L-1)=LINE(L:R-1)
        P=P+R-L
      L=R
      ENDIF
      GOTO 18
19    WRITE(UNIT=2,FMT=2,ERR=9)OUTLIN(:P-1)
      GOTO 5
2     FORMAT(A)
17    FORMAT(A8)
1     WRITE(*,2)'Failed to open input file'
      STOP
3     WRITE(*,2)'Failed to open output file'
      STOP
6     WRITE(*,2)'Failed to read a record from input file'
      STOP
9     WRITE(*,2)'Failed to write a record to output file'
      STOP
11    CLOSE(UNIT=1)
      CLOSE(UNIT=2)
      STOP
15    WRITE(*,2)'Input line too long'
      STOP
      END
